@page
@model proyecto1bases.Pages.VentaSector
@{
    ViewData["Title"] = "Ventas por Sector";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f0f4ff;
            margin: 0;
            padding: 0;
        }
        .container {
            width: 90%;
            max-width: 800px;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin: 50px auto;
        }
        h1 {
            font-size: 2rem;
            color: #004085;
            text-align: center;
        }
        .filters {
            margin-bottom: 20px;
        }
        .filters label {
            margin-right: 10px;
        }
        .filters input {
            margin-right: 15px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>@ViewData["Title"]</h1>

        <!-- Filters -->
        <div class="filters">
            <form method="get">
                <label for="fecha_inicio">Fecha de inicio:</label>
                <input type="date" id="fecha_inicio" name="fecha_inicio" value="@Model.FechaInicio?.ToString("yyyy-MM-dd")" />
                
                <label for="fecha_fin">Fecha de fin:</label>
                <input type="date" id="fecha_fin" name="fecha_fin" value="@Model.FechaFin?.ToString("yyyy-MM-dd")" />
                
                <button type="submit">Aplicar filtros</button>
            </form>
        </div>

        <!-- Back Button -->
        <a href="/menus/Reportes" class="btn btn-primary">Volver a Reportes</a>

        <canvas id="ventaSectorChart" width="400" height="400"></canvas>

        <script>
            var ctx = document.getElementById('ventaSectorChart').getContext('2d');
            var ventaSectorChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.Ventas.Select(v => v.Sector).ToList())),
                    datasets: [{
                        label: 'Total Venta por Sector',
                        data: @Html.Raw(Json.Serialize(Model.Ventas.Select(v => v.TotalVenta).ToList())),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(tooltipItem) {
                                    return tooltipItem.label + ": " + tooltipItem.raw.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });
        </script>
    </div>
</body>
</html>
