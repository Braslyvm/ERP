@page
@model proyecto1bases.Pages.Ventadepartamento
@{
    ViewData["Title"] = "Ventas por Departamento";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="~/css/index.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f0f4ff;
            margin: 0;
            padding: 0;
        }
        .container {
            width: 90%;
            max-width: 800px;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin: 50px auto;
        }
        h1 {
            font-size: 2rem;
            color: #004085;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>@ViewData["Title"]</h1>

        <!-- Formulario de filtro por rango de fechas -->
        <form method="get">
            
            <label for="fecha_inicio">Fecha Inicio:</label>
            <input type="date" id="fecha_inicio" name="fecha_inicio" value="@Model.FechaInicio" class="form-control">
            
            
            <label for="fecha_fin">Fecha Fin:</label>
            <input type="date" id="fecha_fin" name="fecha_fin" value="@Model.FechaFin" class="form-control">
            
            <button type="submit" class="btn">Filtrar</button>
        </form>
        <!-- Gráfico de ventas por departamento -->
        <canvas id="ventaDepartamentoChart" width="300" height="300"></canvas>

        <script>
            // Datos para el gráfico
            var ctx = document.getElementById('ventaDepartamentoChart').getContext('2d');
            var ventaDepartamentoChart = new Chart(ctx, {
                type: 'pie', // Tipo de gráfico: Pie
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.Ventas.Select(v => v.departamento).ToList())),
                    datasets: [{
                        label: 'Cantidad de Ventas por Departamento',
                        data: @Html.Raw(Json.Serialize(Model.Ventas.Select(v => v.cantidadVentas).ToList())),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(tooltipItem) {
                                    return tooltipItem.label + ": " + tooltipItem.raw.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });
        </script>
    </div>
    <form method="get" action="/menus/Reportes">
        <button type="submit" class="boton-volver">Volver</button>
    </form>
</body>
</html>
